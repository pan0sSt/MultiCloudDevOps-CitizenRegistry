name: CI/CD Pipeline

on:
  push:
    branches:
      - develop

permissions:
    contents: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v2
      with:
        java-version: '21'
        distribution: 'adopt'

    - name: Build with Maven
      id: build-mvn
      run: mvn clean install -DskipTests

    - name: Archive test reports
      if: always() && steps.build-mvn.outcome == 'success'
      uses: actions/upload-artifact@v3
      with:
        name: test-reports
        path: citizen-service/target/surefire-reports

    - name: Integration Test
      id: integration-tests
      run: mvn failsafe:integration-test

    - name: Upload integration test reports
      if: always() && steps.integration-tests.outcome == 'success'
      uses: actions/upload-artifact@v3
      with:
        name: integration-test-reports
        path: citizen-service/target/failsafe-reports

  release:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v2
      with:
        java-version: '21'
        distribution: 'adopt'

    - name: Build with Maven
      run: mvn clean package -DskipTests

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: "dev-pre-release-${{ github.run_id }}"
        release_name: "Release ${{ github.sha }}"
        body: "Automatically generated release from ${{ github.sha }}"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: citizen-service/target/citizen-service-1.0-SNAPSHOT.jar
        asset_name: citizen-service-1.0-SNAPSHOT.jar
        asset_content_type: application/java-archive
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
